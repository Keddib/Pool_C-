#include <iostream>
#include <cassert>
#include <cstddef>

class Num
{
	private:
		int _num;
	public:
		Num( void ): _num(0) {std::cout << "const nun\n";}
		~Num( void ) {std::cout << "dest nun\n";}
		Num(const Num& x)
		{
			this->_num = x._num;
			std::cout << "copy constructor called!" << std::endl;
		}
	   //Num operator=(const Num &other)
	   //{
		//   this->_num = other._num;
		//   return *this;
	   //}	  
		Num plus(int n) {

			_num += n;
			return *this;
		}
		Num operator = (Num const & other)
		{
			this->_num = other._num;
		}
		int getV(){ return _num; }
};


int main()
{
	Num a;
	Num b;

	b = a.plus(15).plus(20).plus(30);

	std::cout << "The num = : " << b.getV() << '\n';


	return 0;
} 
